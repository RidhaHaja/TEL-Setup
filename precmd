#!/usr/bin/zsh
#### di edit oleh Ryda® - AmaN
#### put precmd somewhere like " .~/.tel/ " and start sourcing them in your " .zshrc " file like this:
#### . ~/.tel/precmd

preexec () {
  END=$SECONDS 
}

precmd () {
  # var
    # color
  BLACK='\e[30m'
  RED='\e[31m'
  GREEN='\e[32m'
  YELLOW='\e[33m'  
  BLUE='\e[34m'
  PINK=%{$'\e[35m'%}
        BG='\e[0;1;30;48;2;240;240;255m' #White
        BG_PINK=%{$'\e[45m'%}

        # mod
          RESET=%{$'\e[m'%}
          TEL="\e[3$(( RANDOM * 6 / 32767 + 1 ))mTEL"
      ary=(👾 💻 🎨 🐈 🐓 🦃 🦚 🦜 🐢 🐲 🐉 🐼 🐙 🐳 🍄 🔥 🐚 🌊 🍉 🥝 🍋 📒 📕 📗 📘 📙 🌎 🌍 🌏 🛫 🚀)
      LOGO="${ary[RANDOM%${#ary[@]} + 1]}"

    # cmd
      START=$SECONDS
      DATE=$(date +%d/%m/%y)
      TIME=$(date +%H:%M:%S)
      DIR="[$NAME]─[~${PWD/#$HOME}]"
      BAT=$(termux-battery-status | grep perc | tr -d '[a-z]":, ' )
      BATTERY_STATE=$(termux-battery-status | grep stat | tr -d '[a-z]":, ' )
      BATTERY_TEMP0=$(termux-battery-status | grep temp | tr -d '[a-z]":, ' )
      BATTERY_TEMP=$(printf "%.0f" $BATTERY_TEMP0)
      TEMP_F=$(($BATTERY_TEMP * 9/5 + 32))
      TEMP_F=$(printf $BLACK/"%.0f" $TEMP_F)
      #### BAT="cat /sys/class/power_supply/battery/capacity | sed s/$/%/"
      DISK=`df -h | awk '$NF=="/storage/emulated"{printf "%d/%dGB (%s)\n",$4,$2,$5}'`
      #DISK="$(df -h /storage/emulated/0/ | tail -1 | awk '{print $3 " " $4 "/" $2 " (" $5 ") on " $6}')"
ICON=""
if [[ "${BATTERY_STATE}" == "CHARGING" ]]; then
  	if [[ "${BAT}" -le 10 ]]; then
		ICON="$RED $BAT% : $BATTERY_STATE "
  	elif [[ "${BAT}" -le 50 ]]; then
		ICON="$YELLOW $BAT% : $BATTERY_STATE "
  	elif [[ "${BAT}" -le 85 ]]; then
		ICON="$GREEN $BAT% : $BATTERY_STATE "
  	elif [[ "${BAT}" -eq 100 ]]; then
		ICON="$GREEN $BAT% : BATTERY FULL "
  	else
		ICON="$GREEN $BAT% : $BATTERY_STATE "
  	fi
elif [[ "${BATTERY_STATE}" == "DISCHARGING" ]]; then
		Bar=$(( (BAT + 0) / 10 ))
		Bar0=$(printf '%.s▣' $(seq 1 $Bar) && printf '%.s□' $(seq 1 $(( 10 - $Bar ))))  
	if [[ "${BAT}" -le 20 ]]; then		
		# BATTERY < 20
		ICON="$RED${BAT}% $Bar0"
	elif [[ "${BAT}" -le 30 ]]; then
		# 20 < BATTERY < 30
		ICON="$YELLOW${BAT}% $Bar0"
	elif [[ "${BAT}" -le 50 ]]; then
		# 40 < BATTERY < 50
		ICON="$BLUE${BAT}% $Bar0"
	else 
		# 50 < BATTERY
		ICON="$GREEN${BAT}% $Bar0"
	fi
else
	ICON="$RED ʙᴀᴛᴛᴇʀʏ ᴇʀʀᴏʀ "
fi

if [[ "${BATTERY_TEMP}" -le 10 ]]; then		
		TEMP="$GREEN $BATTERY_TEMP"
	elif [[ "${BATTERY_TEMP}" -le 40 ]]; then
		TEMP="$GREEN $BATTERY_TEMP"
	elif [[ "${BATTERY_TEMP}" -le 60 ]]; then
		TEMP="$YELLOW $BATTERY_TEMP"
	elif [[ "${BATTERY_TEMP}" -le 85 ]]; then
		TEMP="$RED $BATTERY_TEMP"
	else 
		TEMP="$RED $BATTERY_TEMP"
fi

    # calc
      EXEC=$(( START - END ))
      baris1=$(printf $RED'%.s═' $(seq 1 $(($(tput cols) - 9 - ${#ICON} - ${#BATTERY_TEMP} - ${#TEMP_F}))))
      baris2=$(printf '%.s ' $(seq 1 $(($(tput cols) - 14 - ${#DISK} - ${#TIME} )))) 
      baris3=$(printf '%.s ' $(seq 1 $(($(tput cols) - 14 - ${#DIR} - ${#DATE} )))) 
      baris4=$(printf '%.s═' $(seq 1 $(($(tput cols) - 4 )))) 

    # prompt
      PS1="$BG_PINK "$EXEC"s $RESET$PINK $LOGO "${HOME/*\/}" "⟫"$RESET "
      RPS1="$PINK$RESET$BG_PINK %(?;^^;--) $RESET"

    # cmd
    # If not running interactively, don't do anything
      [[ $- != *i* ]] && return
tput cup "$(tput lines)" 0

echo -e "$BG
$RED╭═ $LOGO $TEL $baris1 ${ICON}${BLACK}[$TEMP°C${TEMP_F}F]$RED═╮
$RED║$BLACK  : $DISK $baris2 $TIME :  $RED║
$GREEN║$BLACK  : $DIR $baris3 $DATE :  $GREEN║
$GREEN╰═$baris4═╯\e[m"
 } 
 
